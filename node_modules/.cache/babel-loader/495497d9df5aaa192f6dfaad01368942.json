{"ast":null,"code":"var _jsxFileName = \"/home/boo/react/media-center/src/TopMenu.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { AccountCircle } from '@material-ui/icons';\nimport { ExitToApp } from '@material-ui/icons';\nimport { connect } from 'react-redux';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  grid_menu: {\n    height: '8vh',\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nfunction TopMenu(props) {\n  console.log(props.name);\n  const classes = useStyles();\n\n  function menuToggle() {\n    alert('menuToggle');\n  }\n\n  function login() {\n    // alert('login')\n    props.test();\n  }\n\n  function logout() {\n    alert(props.name);\n  }\n\n  return React.createElement(AppBar, {\n    position: \"static\",\n    className: classes.grid_menu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onClick: menuToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Videos\"), React.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onClick: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(AccountCircle, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onClick: logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(ExitToApp, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    name: state.name\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  let m = '123123123';\n  return {\n    test: m => dispatch({\n      type: \"ADD_TODO\",\n      text: m\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopMenu);","map":{"version":3,"sources":["/home/boo/react/media-center/src/TopMenu.js"],"names":["React","makeStyles","AppBar","Toolbar","Typography","Button","IconButton","MenuIcon","AccountCircle","ExitToApp","connect","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","grid_menu","height","display","justifyContent","TopMenu","props","console","log","name","classes","menuToggle","alert","login","test","logout","mapStateToProps","state","mapDispatchToProps","dispatch","m","type","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { AccountCircle } from '@material-ui/icons';\nimport { ExitToApp } from '@material-ui/icons';\n\nimport { connect } from 'react-redux'\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  grid_menu: {\n      height: '8vh',\n      display: 'flex',\n      justifyContent: 'center',\n  }\n}));\n\nfunction TopMenu(props) {\n  console.log(props.name)\n  const classes = useStyles();\n  \n  function menuToggle(){\n    alert('menuToggle')\n  }\n  function login(){\n    // alert('login')\n    props.test()\n  }\n  function logout(){\n    alert(props.name)\n  }\n  return (\n      <AppBar position=\"static\" className={classes.grid_menu}>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={menuToggle}>\n            <MenuIcon fontSize='large' />\n          </IconButton>\n          <Typography variant=\"h4\" className={classes.title}>\n            Videos\n          </Typography>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={login}>\n            <AccountCircle fontSize='large' />\n          </IconButton>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={logout}>\n            <ExitToApp fontSize='large' />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n  );\n}\n\nfunction mapStateToProps (state) {\n  return {\n    name: state.name\n  }\n}\nfunction mapDispatchToProps (dispatch) {\n  let m = '123123123'\n  return {\n    test: m => dispatch({type: \"ADD_TODO\", text: m}) \n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TopMenu);"]},"metadata":{},"sourceType":"module"}